Scenario 1: The bank wants to apply a discount to loan interest rates for customers above 60 years old.
Question: Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.
BEGIN
    FOR cust_rec IN (
        SELECT CustomerID 
        FROM Customers 
        WHERE FLOOR(MONTHS_BETWEEN(SYSDATE, DOB) / 12) > 60
    ) 
    LOOP
        UPDATE Loans
        SET InterestRate = InterestRate * 0.99
        WHERE CustomerID = cust_rec.CustomerID;
    END LOOP;

    COMMIT;
END;


Scenario 2: A customer can be promoted to VIP status based on their balance.
Question: Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.
BEGIN
    FOR vip_candidate IN (
        SELECT CustomerID 
        FROM Customers 
        WHERE Balance > 10000
    ) 
    LOOP
        UPDATE Customers
        SET IsVIP = 'TRUE'
        WHERE CustomerID = vip_candidate.CustomerID;
    END LOOP;

    COMMIT;
END;


Scenario 3: The bank wants to send reminders to customers whose loans are due within the next 30 days.
Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.
BEGIN
    FOR rec IN (
        SELECT L.LoanID, L.CustomerID, C.Name, L.EndDate
        FROM Loans L
        JOIN Customers C ON L.CustomerID = C.CustomerID
        WHERE L.EndDate BETWEEN SYSDATE AND SYSDATE + 30
    ) 
    LOOP
        DBMS_OUTPUT.PUT_LINE('Reminder: Loan ID ' || rec.LoanID || 
                             ' for customer ' || rec.Name || 
                             ' is due on ' || TO_CHAR(rec.EndDate, 'DD-MON-YYYY'));
    END LOOP;
END;
